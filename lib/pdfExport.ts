import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import { Asset } from '@/types/asset';

export const exportToPDF = async (assets: Asset[], filters?: {
  search?: string;
  groupType?: string;
  status?: string;
}) => {
  try {
    // Create a temporary container for the PDF content
    const container = document.createElement('div');
    container.style.position = 'absolute';
    container.style.left = '-9999px';
    container.style.top = '-9999px';
    container.style.width = '800px';
    container.style.backgroundColor = 'white';
    container.style.padding = '20px';
    container.style.fontFamily = 'Arial, sans-serif';

    // Create the HTML content for the PDF
    const currentDate = new Date().toLocaleDateString();
    const filterText = filters ? 
      `Filters: ${[
        filters.search && `Search: "${filters.search}"`,
        filters.groupType && `Group: ${filters.groupType}`,
        filters.status && `Status: ${filters.status}`
      ].filter(Boolean).join(', ') || 'None'}` : '';

    container.innerHTML = `
      <div style="margin-bottom: 30px;">
        <h1 style="color: #1f2937; margin-bottom: 10px; font-size: 24px;">IT Asset Management Report</h1>
        <p style="color: #6b7280; margin: 5px 0;">Generated on: ${currentDate}</p>
        <p style="color: #6b7280; margin: 5px 0;">Total Assets: ${assets.length}</p>
        ${filterText ? `<p style="color: #6b7280; margin: 5px 0;">${filterText}</p>` : ''}
      </div>
      
      <table style="width: 100%; border-collapse: collapse; margin-top: 20px;">
        <thead>
          <tr style="background-color: #f9fafb;">
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Asset Name</th>
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Asset ID</th>
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Group Type</th>
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Status</th>
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Description</th>
            <th style="border: 1px solid #d1d5db; padding: 12px; text-align: left; font-weight: 600;">Created</th>
          </tr>
        </thead>
        <tbody>
          ${assets.map((asset, index) => `
            <tr style="background-color: ${index % 2 === 0 ? '#ffffff' : '#f9fafb'};">
              <td style="border: 1px solid #d1d5db; padding: 8px;">${asset.assetName}</td>
              <td style="border: 1px solid #d1d5db; padding: 8px; font-family: monospace;">${asset.assetID}</td>
              <td style="border: 1px solid #d1d5db; padding: 8px; text-transform: capitalize;">${asset.groupType}</td>
              <td style="border: 1px solid #d1d5db; padding: 8px;">
                <span style="padding: 2px 8px; border-radius: 12px; font-size: 12px; font-weight: 600; 
                  ${getStatusStyle(asset.status)}">${asset.status}</span>
              </td>
              <td style="border: 1px solid #d1d5db; padding: 8px; max-width: 200px; word-wrap: break-word;">
                ${asset.description || 'N/A'}
              </td>
              <td style="border: 1px solid #d1d5db; padding: 8px;">
                ${new Date(asset.createdAt).toLocaleDateString()}
              </td>
            </tr>
          `).join('')}
        </tbody>
      </table>
      
      <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #d1d5db; color: #6b7280; font-size: 12px;">
        <p>This report was generated by IT Asset Management System</p>
        <p>For more information, please contact your IT administrator</p>
      </div>
    `;

    document.body.appendChild(container);

    // Convert HTML to canvas
    const canvas = await html2canvas(container, {
      scale: 2,
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff'
    });

    // Remove the temporary container
    document.body.removeChild(container);

    // Create PDF
    const imgData = canvas.toDataURL('image/png');
    const pdf = new jsPDF('p', 'mm', 'a4');
    
    const imgWidth = 210; // A4 width in mm
    const pageHeight = 295; // A4 height in mm
    const imgHeight = (canvas.height * imgWidth) / canvas.width;
    let heightLeft = imgHeight;
    let position = 0;

    // Add first page
    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
    heightLeft -= pageHeight;

    // Add additional pages if needed
    while (heightLeft >= 0) {
      position = heightLeft - imgHeight;
      pdf.addPage();
      pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
      heightLeft -= pageHeight;
    }

    // Save the PDF
    const filename = `IT_Assets_Report_${new Date().toISOString().split('T')[0]}.pdf`;
    pdf.save(filename);

    return { success: true, filename };
  } catch (error) {
    console.error('Error generating PDF:', error);
    throw new Error('Failed to generate PDF report');
  }
};

function getStatusStyle(status: string): string {
  switch (status.toLowerCase()) {
    case 'active':
      return 'background-color: #dcfce7; color: #166534;';
    case 'inactive':
      return 'background-color: #f3f4f6; color: #374151;';
    case 'maintenance':
      return 'background-color: #fef3c7; color: #92400e;';
    case 'retired':
      return 'background-color: #fecaca; color: #991b1b;';
    case 'lost':
      return 'background-color: #e9d5ff; color: #7c2d12;';
    default:
      return 'background-color: #f3f4f6; color: #374151;';
  }
}

